{"cells":[{"cell_type":"markdown","metadata":{"id":"AnsojyND5vzM"},"source":["Установка необходимых библиотек"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h40vrqAss0ck","executionInfo":{"status":"ok","timestamp":1706121497089,"user_tz":-180,"elapsed":33021,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"9f9fd364-3050-4c81-8c5f-127b201b3b8b"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["!ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bn_iEKvKg5zP","executionInfo":{"status":"ok","timestamp":1706122173098,"user_tz":-180,"elapsed":272,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"e5fc1cab-ab51-4c51-cdfc-b6257ec0d5ab"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["dataset.zip  drive  recommendations.csv  sample_data\n"]}]},{"cell_type":"code","source":["!cp /content/drive/MyDrive/project/dataset.zip /content/"],"metadata":{"id":"c3aWye7qto9J","executionInfo":{"status":"ok","timestamp":1706122112801,"user_tz":-180,"elapsed":2895,"user":{"displayName":"S S","userId":"07054900232677344769"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["!cp /content/drive/MyDrive/project/recommendations.csv /content/"],"metadata":{"id":"6N0L2uB5uP1_","executionInfo":{"status":"ok","timestamp":1706122170234,"user_tz":-180,"elapsed":797,"user":{"displayName":"S S","userId":"07054900232677344769"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":6,"metadata":{"id":"Hbk5trmJPhFh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706122192902,"user_tz":-180,"elapsed":6484,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"cbdd846c-ae69-4642-bb0d-8a43cbf7beb2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pytesseract\n","  Downloading pytesseract-0.3.10-py3-none-any.whl (14 kB)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (23.2)\n","Requirement already satisfied: Pillow>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (9.4.0)\n","Installing collected packages: pytesseract\n","Successfully installed pytesseract-0.3.10\n"]}],"source":["!pip install pytesseract"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"7hcE1PDyOHx7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706122199725,"user_tz":-180,"elapsed":6864,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"e153f540-aca5-4080-a854-ec7e5485231e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following additional packages will be installed:\n","  tesseract-ocr-eng tesseract-ocr-osd\n","The following NEW packages will be installed:\n","  tesseract-ocr tesseract-ocr-eng tesseract-ocr-osd\n","0 upgraded, 3 newly installed, 0 to remove and 30 not upgraded.\n","Need to get 4,816 kB of archives.\n","After this operation, 15.6 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-eng all 1:4.00~git30-7274cfa-1.1 [1,591 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-osd all 1:4.00~git30-7274cfa-1.1 [2,990 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr amd64 4.1.1-2.1build1 [236 kB]\n","Fetched 4,816 kB in 1s (3,450 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 3.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package tesseract-ocr-eng.\n","(Reading database ... 121658 files and directories currently installed.)\n","Preparing to unpack .../tesseract-ocr-eng_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-eng (1:4.00~git30-7274cfa-1.1) ...\n","Selecting previously unselected package tesseract-ocr-osd.\n","Preparing to unpack .../tesseract-ocr-osd_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-osd (1:4.00~git30-7274cfa-1.1) ...\n","Selecting previously unselected package tesseract-ocr.\n","Preparing to unpack .../tesseract-ocr_4.1.1-2.1build1_amd64.deb ...\n","Unpacking tesseract-ocr (4.1.1-2.1build1) ...\n","Setting up tesseract-ocr-eng (1:4.00~git30-7274cfa-1.1) ...\n","Setting up tesseract-ocr-osd (1:4.00~git30-7274cfa-1.1) ...\n","Setting up tesseract-ocr (4.1.1-2.1build1) ...\n","Processing triggers for man-db (2.10.2-1) ...\n"]}],"source":["!sudo apt install tesseract-ocr"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"Jn-SpccUCNMI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706122203587,"user_tz":-180,"elapsed":3875,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"34e596e8-8f71-4373-8e02-fb734055431b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following NEW packages will be installed:\n","  tesseract-ocr-rus\n","0 upgraded, 1 newly installed, 0 to remove and 30 not upgraded.\n","Need to get 1,271 kB of archives.\n","After this operation, 3,877 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-rus all 1:4.00~git30-7274cfa-1.1 [1,271 kB]\n","Fetched 1,271 kB in 1s (1,146 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package tesseract-ocr-rus.\n","(Reading database ... 121705 files and directories currently installed.)\n","Preparing to unpack .../tesseract-ocr-rus_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-rus (1:4.00~git30-7274cfa-1.1) ...\n","Setting up tesseract-ocr-rus (1:4.00~git30-7274cfa-1.1) ...\n"]}],"source":["!sudo apt install tesseract-ocr-rus"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"IFBaWz9osIi-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706122215448,"user_tz":-180,"elapsed":11880,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"91a19b24-fb8c-45a9-f46f-e697e399cb29"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting datefinder\n","  Downloading datefinder-0.7.3-py2.py3-none-any.whl (10 kB)\n","Requirement already satisfied: regex>=2017.02.08 in /usr/local/lib/python3.10/dist-packages (from datefinder) (2023.6.3)\n","Requirement already satisfied: python-dateutil>=2.4.2 in /usr/local/lib/python3.10/dist-packages (from datefinder) (2.8.2)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.10/dist-packages (from datefinder) (2023.3.post1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.4.2->datefinder) (1.16.0)\n","Installing collected packages: datefinder\n","Successfully installed datefinder-0.7.3\n"]}],"source":["!pip install datefinder"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"EpU60Bh09BVv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706122217565,"user_tz":-180,"elapsed":2133,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"1b2303f5-2c89-4276-e5d8-6ad1a0420973"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  dataset.zip\n","   creating: dataset/\n","  inflating: __MACOSX/._dataset      \n","   creating: dataset/milk/\n","  inflating: __MACOSX/dataset/._milk  \n","   creating: dataset/protein/\n","  inflating: __MACOSX/dataset/._protein  \n","   creating: dataset/cheese/\n","  inflating: __MACOSX/dataset/._cheese  \n","   creating: dataset/pasta/\n","  inflating: __MACOSX/dataset/._pasta  \n","   creating: dataset/tea/\n","  inflating: __MACOSX/dataset/._tea  \n","   creating: dataset/proper_nutrition/\n","  inflating: __MACOSX/dataset/._proper_nutrition  \n","   creating: dataset/sweets/\n","  inflating: __MACOSX/dataset/._sweets  \n","  inflating: dataset/milk/8.JPG      \n","  inflating: __MACOSX/dataset/milk/._8.JPG  \n","  inflating: dataset/milk/9.JPG      \n","  inflating: __MACOSX/dataset/milk/._9.JPG  \n","  inflating: dataset/milk/12.JPG     \n","  inflating: __MACOSX/dataset/milk/._12.JPG  \n","  inflating: dataset/milk/13.JPG     \n","  inflating: __MACOSX/dataset/milk/._13.JPG  \n","  inflating: dataset/milk/11.JPG     \n","  inflating: __MACOSX/dataset/milk/._11.JPG  \n","  inflating: dataset/milk/10.JPG     \n","  inflating: __MACOSX/dataset/milk/._10.JPG  \n","  inflating: dataset/milk/4.JPG      \n","  inflating: __MACOSX/dataset/milk/._4.JPG  \n","  inflating: dataset/milk/5.JPG      \n","  inflating: __MACOSX/dataset/milk/._5.JPG  \n","  inflating: dataset/milk/7.JPG      \n","  inflating: __MACOSX/dataset/milk/._7.JPG  \n","  inflating: dataset/milk/6.JPG      \n","  inflating: __MACOSX/dataset/milk/._6.JPG  \n","  inflating: dataset/milk/2.JPG      \n","  inflating: __MACOSX/dataset/milk/._2.JPG  \n","  inflating: dataset/milk/3.JPG      \n","  inflating: __MACOSX/dataset/milk/._3.JPG  \n","  inflating: dataset/milk/1.JPG      \n","  inflating: __MACOSX/dataset/milk/._1.JPG  \n","  inflating: dataset/protein/4.JPG   \n","  inflating: __MACOSX/dataset/protein/._4.JPG  \n","  inflating: dataset/protein/5.JPG   \n","  inflating: __MACOSX/dataset/protein/._5.JPG  \n","  inflating: dataset/protein/2.JPG   \n","  inflating: __MACOSX/dataset/protein/._2.JPG  \n","  inflating: dataset/protein/3.JPG   \n","  inflating: __MACOSX/dataset/protein/._3.JPG  \n","  inflating: dataset/protein/1.JPG   \n","  inflating: __MACOSX/dataset/protein/._1.JPG  \n","  inflating: dataset/cheese/8.JPG    \n","  inflating: __MACOSX/dataset/cheese/._8.JPG  \n","  inflating: dataset/cheese/9.JPG    \n","  inflating: __MACOSX/dataset/cheese/._9.JPG  \n","  inflating: dataset/cheese/12.JPG   \n","  inflating: __MACOSX/dataset/cheese/._12.JPG  \n","  inflating: dataset/cheese/13.JPG   \n","  inflating: __MACOSX/dataset/cheese/._13.JPG  \n","  inflating: dataset/cheese/11.JPG   \n","  inflating: __MACOSX/dataset/cheese/._11.JPG  \n","  inflating: dataset/cheese/10.JPG   \n","  inflating: __MACOSX/dataset/cheese/._10.JPG  \n","  inflating: dataset/cheese/4.JPG    \n","  inflating: __MACOSX/dataset/cheese/._4.JPG  \n","  inflating: dataset/cheese/5.JPG    \n","  inflating: __MACOSX/dataset/cheese/._5.JPG  \n","  inflating: dataset/cheese/7.JPG    \n","  inflating: __MACOSX/dataset/cheese/._7.JPG  \n","  inflating: dataset/cheese/6.JPG    \n","  inflating: __MACOSX/dataset/cheese/._6.JPG  \n","  inflating: dataset/cheese/2.JPG    \n","  inflating: __MACOSX/dataset/cheese/._2.JPG  \n","  inflating: dataset/cheese/3.JPG    \n","  inflating: __MACOSX/dataset/cheese/._3.JPG  \n","  inflating: dataset/cheese/1.JPG    \n","  inflating: __MACOSX/dataset/cheese/._1.JPG  \n","  inflating: dataset/pasta/8.JPG     \n","  inflating: __MACOSX/dataset/pasta/._8.JPG  \n","  inflating: dataset/pasta/9.JPG     \n","  inflating: __MACOSX/dataset/pasta/._9.JPG  \n","  inflating: dataset/pasta/4.JPG     \n","  inflating: __MACOSX/dataset/pasta/._4.JPG  \n","  inflating: dataset/pasta/5.JPG     \n","  inflating: __MACOSX/dataset/pasta/._5.JPG  \n","  inflating: dataset/pasta/7.JPG     \n","  inflating: __MACOSX/dataset/pasta/._7.JPG  \n","  inflating: dataset/pasta/6.JPG     \n","  inflating: __MACOSX/dataset/pasta/._6.JPG  \n","  inflating: dataset/pasta/2.JPG     \n","  inflating: __MACOSX/dataset/pasta/._2.JPG  \n","  inflating: dataset/pasta/3.JPG     \n","  inflating: __MACOSX/dataset/pasta/._3.JPG  \n","  inflating: dataset/pasta/1.JPG     \n","  inflating: __MACOSX/dataset/pasta/._1.JPG  \n","  inflating: dataset/tea/4.JPG       \n","  inflating: __MACOSX/dataset/tea/._4.JPG  \n","  inflating: dataset/tea/2.JPG       \n","  inflating: __MACOSX/dataset/tea/._2.JPG  \n","  inflating: dataset/tea/3.JPG       \n","  inflating: __MACOSX/dataset/tea/._3.JPG  \n","  inflating: dataset/tea/1.JPG       \n","  inflating: __MACOSX/dataset/tea/._1.JPG  \n","  inflating: dataset/proper_nutrition/4.JPG  \n","  inflating: __MACOSX/dataset/proper_nutrition/._4.JPG  \n","  inflating: dataset/proper_nutrition/5.JPG  \n","  inflating: __MACOSX/dataset/proper_nutrition/._5.JPG  \n","  inflating: dataset/proper_nutrition/2.JPG  \n","  inflating: __MACOSX/dataset/proper_nutrition/._2.JPG  \n","  inflating: dataset/proper_nutrition/3.JPG  \n","  inflating: __MACOSX/dataset/proper_nutrition/._3.JPG  \n","  inflating: dataset/proper_nutrition/1.JPG  \n","  inflating: __MACOSX/dataset/proper_nutrition/._1.JPG  \n","  inflating: dataset/sweets/4.JPG    \n","  inflating: __MACOSX/dataset/sweets/._4.JPG  \n","  inflating: dataset/sweets/5.JPG    \n","  inflating: __MACOSX/dataset/sweets/._5.JPG  \n","  inflating: dataset/sweets/6.JPG    \n","  inflating: __MACOSX/dataset/sweets/._6.JPG  \n","  inflating: dataset/sweets/2.JPG    \n","  inflating: __MACOSX/dataset/sweets/._2.JPG  \n","  inflating: dataset/sweets/3.JPG    \n","  inflating: __MACOSX/dataset/sweets/._3.JPG  \n","  inflating: dataset/sweets/1.JPG    \n","  inflating: __MACOSX/dataset/sweets/._1.JPG  \n"]}],"source":["!unzip dataset.zip"]},{"cell_type":"markdown","metadata":{"id":"xpi7zkua50xr"},"source":["Создание класса датасета.\n","\n","В данном классе происходят трансформации изображения и поиск всех областей с текстом."]},{"cell_type":"code","execution_count":11,"metadata":{"id":"8OgPrb8tSO45","executionInfo":{"status":"ok","timestamp":1706122266985,"user_tz":-180,"elapsed":646,"user":{"displayName":"S S","userId":"07054900232677344769"}}},"outputs":[],"source":["# все трансформации\n","import cv2\n","\n","class Dilation(object):\n","  def __init__(self, kernel_size=20, iterations=1):\n","    self.kernel_size = kernel_size\n","    self.iterations = iterations\n","\n","  def __call__(self, img):\n","    ret, thresh = cv2.threshold(img, 0, 255, cv2.THRESH_OTSU | cv2.THRESH_BINARY_INV)\n","    kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (self.kernel_size, self.kernel_size))\n","    dilation = cv2.dilate(thresh, kernel, iterations = self.iterations)\n","    return dilation\n","\n","class ToGrayScale(object):\n","  def __init__(self):\n","    pass\n","\n","  def __call__(self, img):\n","    grayscale = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n","    return grayscale"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"8Kv1YCIJ5K6d","executionInfo":{"status":"ok","timestamp":1706122275936,"user_tz":-180,"elapsed":5189,"user":{"displayName":"S S","userId":"07054900232677344769"}}},"outputs":[],"source":["from glob import glob\n","from torchvision.transforms import Compose\n","\n","class FoodDataset:\n","  def __init__(self, root_dir, transformations=None):\n","    self.root_dir = root_dir\n","    self.imgs = sorted(glob(self.root_dir + \"/*/*\"))\n","    self.transformations = None\n","    if transformations:\n","      self.transformations = Compose(transformations)\n","\n","  def __len__(self):\n","    return len(self.imgs)\n","\n","  def __getitem__(self, idx):\n","    img_path = self.imgs[idx]\n","    im = cv2.imread(img_path)\n","    category = img_path.split('/')[-2]\n","\n","    # сначала трансформируем изображение\n","    if self.transformations:\n","      transformed_img = self.transformations(im)\n","\n","    # затем достаем кусочки изображения с текстом\n","    imgs, dilations = self._get_single_images(transformed_img, im)\n","\n","    return img_path, im, imgs, dilations, category\n","\n","  def _get_single_images(self, dilation, image):\n","    contours, hierarchy = cv2.findContours(dilation, cv2.RETR_EXTERNAL,\n","                                                 cv2.CHAIN_APPROX_NONE)\n","    images = []\n","    dilations = []\n","\n","    for contour in contours:\n","      img = image.copy()\n","      dil = dilation.copy()\n","      x, y, w, h = cv2.boundingRect(contour)\n","      cropped_img = img[y:y + h, x:x + w]\n","      cropped_dilation = dil[y:y+h, x:x+w]\n","      dilations.append(cropped_dilation)\n","      images.append(cropped_img)\n","\n","    return images, dilations"]},{"cell_type":"code","source":["!which tesseract"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FiaQjYH7u8v5","executionInfo":{"status":"ok","timestamp":1706122276252,"user_tz":-180,"elapsed":339,"user":{"displayName":"S S","userId":"07054900232677344769"}},"outputId":"d6c41642-1d8c-43f6-b124-6dc6ca2c00ab"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["/usr/bin/tesseract\n"]}]},{"cell_type":"markdown","metadata":{"id":"0kytliAw7Hd9"},"source":["Лоадинг самого распознавания\n","\n","_Примечание:_ можно использовать эту модель: https://github.com/clovaai/CRAFT-pytorch/tree/master чтобы иметь больше кода в работе"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"TOMMsqh59FK8","executionInfo":{"status":"ok","timestamp":1706122315497,"user_tz":-180,"elapsed":623,"user":{"displayName":"S S","userId":"07054900232677344769"}}},"outputs":[],"source":["import pytesseract\n","import datefinder\n","from PIL import Image\n","import datetime\n","\n","pytesseract.pytesseract.tesseract_cmd = (\n","    r'/usr/bin/tesseract'\n",")\n","\n","def extract_dates(texts):\n","  dates = []\n","  for text in texts:\n","    text = ''.join(text.split())\n","    found_dates = list(datefinder.find_dates(text))\n","    dates.extend(found_dates)\n","  dates = list(set(dates))\n","  return dates\n","\n","def get_all_texts(im, imgs, dilations):\n","  texts = [pytesseract.image_to_string(Image.fromarray(im[0].numpy()), lang=\"rus\")]\n","  for image in imgs:\n","    txt = pytesseract.image_to_string(Image.fromarray(image[0].numpy()), lang=\"rus\")\n","    texts.append(txt)\n","  for dil in dilations:\n","    txt = pytesseract.image_to_string(Image.fromarray(dil[0].numpy()), lang=\"rus\")\n","    texts.append(txt)\n","\n","  return texts\n","\n","def make_recommendations(df, dates, category):\n","  if len(dates) == 0:\n","    print(\"Ничего неизвестно о дате выпуска продукта.\")\n","    return\n","  product_info = df.loc[df['class'] == category]\n","  current_date = datetime.datetime.now()\n","  manufac_date = min(dates)\n","  expire_date = max(dates)\n","  if manufac_date == expire_date:\n","    expire_date += datetime.timedelta(days=int(product_info['avg_shelf_life']))\n","  shelf_life = (expire_date - manufac_date).days\n","  recommended = float(product_info['recommended'])\n","  safe_period = float(product_info['safe_period'])\n","  if shelf_life * recommended < (expire_date - current_date).days:\n","    print(\"Продукт свежий, рекомендован к употреблению\")\n","    return\n","  if recommended < 1:\n","    if manufac_date + datetime.timedelta(days=shelf_life) > current_date:\n","      print(\"Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\")\n","    elif manufac_date + datetime.timedelta(days=shelf_life) == current_date:\n","      print(\"Срок годности истекает сегодня. Не рекомендовано к употреблению людям с индивидуальной непереносимостью\")\n","    else:\n","      print(\"Срок годности истек. Употреблять нельзя\")\n","  else:\n","    if manufac_date + datetime.timedelta(days=shelf_life + safe_period) <= current_date:\n","      print(\"Срок годности истек, однако продукт еще возможно употреблять людям без заболеваний\")\n","    else:\n","      print(\"Срок годности и запас срока годности истек. Употреблять нельзя\")"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K4M8ZeXC8MEW","outputId":"0d24f157-f172-4f49-ae26-7f39fc22cef2","executionInfo":{"status":"ok","timestamp":1706123753635,"user_tz":-180,"elapsed":1431770,"user":{"displayName":"S S","userId":"07054900232677344769"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["  2%|▏         | 1/55 [00:20<18:32, 20.60s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/1.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r  4%|▎         | 2/55 [00:42<18:45, 21.23s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/10.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r  5%|▌         | 3/55 [01:08<20:30, 23.66s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/11.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r  7%|▋         | 4/55 [01:40<22:43, 26.73s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/12.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r  9%|▉         | 5/55 [02:13<24:18, 29.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/13.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r 11%|█         | 6/55 [02:27<19:24, 23.76s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/2.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 13%|█▎        | 7/55 [02:50<18:52, 23.58s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/3.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r 15%|█▍        | 8/55 [03:06<16:45, 21.40s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/4.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 16%|█▋        | 9/55 [03:30<16:56, 22.10s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/5.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 18%|█▊        | 10/55 [03:52<16:34, 22.11s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/6.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r 20%|██        | 11/55 [04:37<21:22, 29.15s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/7.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r 22%|██▏       | 12/55 [05:20<23:54, 33.37s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/8.JPG\n","Срок годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 24%|██▎       | 13/55 [05:52<22:59, 32.85s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/cheese/9.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 25%|██▌       | 14/55 [06:12<19:48, 28.98s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/1.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 27%|██▋       | 15/55 [06:33<17:45, 26.65s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/10.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 29%|██▉       | 16/55 [06:47<14:45, 22.71s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/11.JPG\n","Срок годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 31%|███       | 17/55 [07:06<13:40, 21.60s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/12.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 33%|███▎      | 18/55 [07:23<12:30, 20.29s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/13.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 35%|███▍      | 19/55 [07:41<11:48, 19.68s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/2.JPG\n","Срок годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 36%|███▋      | 20/55 [08:00<11:14, 19.28s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/3.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 38%|███▊      | 21/55 [08:18<10:40, 18.83s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/4.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 40%|████      | 22/55 [08:39<10:51, 19.73s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/5.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 42%|████▏     | 23/55 [08:57<10:09, 19.05s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/6.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 44%|████▎     | 24/55 [09:15<09:43, 18.82s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/7.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 45%|████▌     | 25/55 [09:35<09:33, 19.13s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/8.JPG\n","Срок годности не истек, но подходит к концу. Не рекомендован людям с индивидуальной непереносимостью\n"]},{"output_type":"stream","name":"stderr","text":["\r 47%|████▋     | 26/55 [09:51<08:51, 18.34s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/milk/9.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 49%|████▉     | 27/55 [10:09<08:27, 18.11s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/1.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 51%|█████     | 28/55 [10:28<08:19, 18.51s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/2.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 53%|█████▎    | 29/55 [10:53<08:51, 20.44s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/3.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 55%|█████▍    | 30/55 [11:12<08:13, 19.75s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/4.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 56%|█████▋    | 31/55 [11:46<09:39, 24.14s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/5.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 58%|█████▊    | 32/55 [12:23<10:41, 27.91s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/6.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 60%|██████    | 33/55 [12:43<09:23, 25.59s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/7.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 62%|██████▏   | 34/55 [13:16<09:48, 28.00s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/8.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 64%|██████▎   | 35/55 [13:35<08:22, 25.12s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/pasta/9.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 65%|██████▌   | 36/55 [14:11<08:58, 28.34s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/proper_nutrition/1.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 67%|██████▋   | 37/55 [14:49<09:22, 31.25s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/proper_nutrition/2.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 69%|██████▉   | 38/55 [15:08<07:48, 27.53s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/proper_nutrition/3.JPG\n","Срок годности истек, однако продукт еще возможно употреблять людям без заболеваний\n"]},{"output_type":"stream","name":"stderr","text":["\r 71%|███████   | 39/55 [15:27<06:43, 25.20s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/proper_nutrition/4.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 73%|███████▎  | 40/55 [15:47<05:54, 23.60s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/proper_nutrition/5.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 75%|███████▍  | 41/55 [16:38<07:22, 31.63s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/protein/1.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 76%|███████▋  | 42/55 [17:00<06:16, 28.98s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/protein/2.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 78%|███████▊  | 43/55 [17:21<05:18, 26.53s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/protein/3.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 80%|████████  | 44/55 [17:49<04:55, 26.83s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/protein/4.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 82%|████████▏ | 45/55 [18:05<03:57, 23.75s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/protein/5.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 84%|████████▎ | 46/55 [18:39<03:59, 26.62s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/sweets/1.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["\r 85%|████████▌ | 47/55 [19:10<03:45, 28.16s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/sweets/2.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 87%|████████▋ | 48/55 [20:06<04:14, 36.34s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/sweets/3.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 89%|████████▉ | 49/55 [20:51<03:54, 39.07s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/sweets/4.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 91%|█████████ | 50/55 [21:20<03:00, 36.11s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/sweets/5.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\r 93%|█████████▎| 51/55 [21:40<02:04, 31.18s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/sweets/6.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 95%|█████████▍| 52/55 [22:24<01:45, 35.04s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/tea/1.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 96%|█████████▋| 53/55 [23:03<01:12, 36.12s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/tea/2.JPG\n","Ничего неизвестно о дате выпуска продукта.\n"]},{"output_type":"stream","name":"stderr","text":["\r 98%|█████████▊| 54/55 [23:19<00:30, 30.20s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/tea/3.JPG\n","Продукт свежий, рекомендован к употреблению\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 55/55 [23:51<00:00, 26.03s/it]"]},{"output_type":"stream","name":"stdout","text":["Изображение: dataset/tea/4.JPG\n","Срок годности и запас срока годности истек. Употреблять нельзя\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}],"source":["from torch.utils.data import DataLoader\n","from tqdm import tqdm\n","import pandas as pd\n","\n","transformations = [ToGrayScale(), Dilation()]\n","dataset = FoodDataset('dataset', transformations)\n","dataloader = DataLoader(dataset, batch_size=1, shuffle=False)\n","recommends = pd.read_csv('recommendations.csv', sep=\";\")\n","\n","for path, im, imgs, dilations, category in tqdm(dataloader):\n","  texts = get_all_texts(im, imgs, dilations)\n","  dates = extract_dates(texts)\n","  print(\"Изображение: \" + path[0])\n","  make_recommendations(recommends, dates, category[0])"]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[{"file_id":"15i_45ZznNtO2RGvA-c_1oFtC0zghZ-ii","timestamp":1706121299748}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.5"}},"nbformat":4,"nbformat_minor":0}